<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>codereview on Aron Atkins</title>
    <link>https://aronatkins.github.io/tags/codereview/</link>
    <description>Recent content in codereview on Aron Atkins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>aron.atkins@gmail.com (Aron Atkins)</managingEditor>
    <webMaster>aron.atkins@gmail.com (Aron Atkins)</webMaster>
    <lastBuildDate>Thu, 22 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://aronatkins.github.io/tags/codereview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A perfect pull?</title>
      <link>https://aronatkins.github.io/posts/2015-01-22-a-perfect-pull/</link>
      <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
      <author>aron.atkins@gmail.com (Aron Atkins)</author>
      <guid>https://aronatkins.github.io/posts/2015-01-22-a-perfect-pull/</guid>
      <description>Yesterday, GitHub published their guidelines for collaborating with pull requests. I love this.
I have written about my code review philosophy and guidelines in the past. The GitHub guide captures much of the same advice and also includes a few practical tips when using the GitHub Flow and pull requests.
The GitHub guidelines were inspired by Thoughtbot&amp;rsquo;s code review guide.</description>
    </item>
    
    <item>
      <title>Hey, Buddy!</title>
      <link>https://aronatkins.github.io/posts/2014-12-13-hey-buddy/</link>
      <pubDate>Sat, 13 Dec 2014 00:00:00 +0000</pubDate>
      <author>aron.atkins@gmail.com (Aron Atkins)</author>
      <guid>https://aronatkins.github.io/posts/2014-12-13-hey-buddy/</guid>
      <description>Thanks to github and their easy-to-use pull request UI, pre-commit code reviews have become much more common in the industry. For me, lightweight peer reviews are a requirement in any well-run development shop. Github certainly did not invent this style of review, but they have certainly help popularize the practice. Thanks, Github!
I have helped establish code reviewing throughout my career ever since seeing its positive effect at my first job, working on formal verification tools at Chrysalis Symbolic Design.</description>
    </item>
    
  </channel>
</rss>